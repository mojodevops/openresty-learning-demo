worker_processes  1;

events {
    worker_connections  1024;
}

error_log logs/error.log debug;

http {
    # Load required modules
    lua_package_path "/usr/local/lib/lua/?.lua;;";
    lua_package_cpath "/usr/local/lib/lua/?.so;;";
    
    lua_shared_dict tmp 12k; # define for ngx.log not work

    # Shared dictionary to store upstream state
    lua_shared_dict upstream_state 10m;
    
    # Include the upstream configuration
    upstream my_backend {
        server 127.0.0.1:11280 weight=1;
        server 127.0.0.1:20001 weight=1;
        balancer_by_lua_block {
            require("dynamic_balancer").balance()
        }
    }

    init_worker_by_lua_block {
        ngx.log(ngx.DEBUG, "init hello world")
        require("dynamic_balancer").init_worker()
    }

    server {
        listen 8089;
        
        # API for managing upstream servers
        location /api/upstream {
            content_by_lua_block {
                ngx.log(ngx.DEBUG, "api hello world")
                require("upstream_api").handle()
            }
        }
        
        # Your regular content location
        location / {
            proxy_pass http://my_backend;
        }
    }
}
